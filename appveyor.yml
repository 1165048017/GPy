environment:
  pip_upload:
    secure: 8/ZjXFwtd1S7ixd7PJOpptupKKEDhm2da/q3unabJ00=

  matrix:
    - PYTHON_VERSION: 2.7
      MINICONDA: C:\Miniconda-x64
    - PYTHON_VERSION: 3.5
      MINICONDA: C:\Miniconda35-x64



branches:
  only:
    - deploy

install:
  - "set PATH=%MINICONDA%;%MINICONDA%\\Scripts;%PATH%"
  - conda config --set always_yes yes --set changeps1 no
  - conda update -q conda
  - conda info -a
  - "conda create -q -n build-environment python=%PYTHON_VERSION% numpy scipy matplotlib"
  - activate build-environment
  # We need wheel installed to build wheels
  - python -m pip install wheel
  # GPy needs paramz
  - python -m pip install paramz
  - python -m pip install nose-show-skipped
  - python -m pip install coverage
  - python -m pip install twine
  - "python setup.py develop"
  #- set `copy /b GPy/__version__.py | tr -d '[[:space:]]'`

build: off

test_script:
  # Put your test command here.
  # If you don't need to build C extensions on 64-bit Python 3.3 or 3.4,
  # you can remove "build.cmd" from the front of the command, as it's
  # only needed to support those cases.
  # Note that you must use the environment variable %PYTHON% to refer to
  # the interpreter you're using - Appveyor does not do anything special
  # to put the Python evrsion you want to use on PATH.
  #- "build.cmd %PYTHON%\\python.exe setup.py test"
  #- "coverage run travis_tests.py"

after_test:
  # This step builds your wheels.
  - "python setup.py bdist_wheel bdist_wininst"

artifacts:
  # bdist_wheel puts your built wheel in the dist directory
  - path: dist\*

on_success:
 - "echo [pypi] > %USERPROFILE%\\.pypirc"
 - "echo username:maxz >> %USERPROFILE%\\.pypirc"
 - "echo password:%pip_upload% >> %USERPROFILE%\\.pypirc"
 - echo "" >> "%USERPROFILE%\\.pypirc"
 - "echo [test] >> %USERPROFILE%\\.pypirc"
 - "echo repository:https://testpypi.python.org/pypi >> %USERPROFILE%\\.pypirc"
 - "echo username:maxz >> %USERPROFILE%\\.pypirc"
 - "echo password:%pip_upload% >> %USERPROFILE%\\.pypirc"
 - ls dist\
 - twine upload -r test dist\* 
 
#deploy:
#  release: GPy-v$(__version__)
#  description: 'GPy windows install'
#  provider: GitHub
#  artifact: dist\*.exe            # upload wininst to GitHub
#  draft: false
#  prerelease: false
#  on:
#    branch: deploy                 # release from deploy branch only
#    #appveyor_repo_tag: true        # deploy on tag push only